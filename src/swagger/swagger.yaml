openapi: 3.0.0
info:
  title: Depo Yönetim API
  description: Depo Yönetim Sistemi için RESTful API
  version: 1.0.0
servers:
  - url: /api
    description: API ana URL'i

# Tags for API categorization
tags:
  - name: Firma
    description: Firma (müşteri ve tedarikçi) işlemleri
  - name: Personel
    description: Personel yönetimi işlemleri
  - name: Stok
    description: Stok ve ürün yönetimi işlemleri
  - name: Sipariş
    description: Sipariş ve sevkiyat işlemleri
  - name: Tedarikçi
    description: Tedarikçi firma işlemleri

# Define all paths directly instead of using references
paths:
  # Firma endpoints
  /firma:
    get:
      summary: Tüm firmaları listele
      tags: [Firma]
      responses:
        200:
          description: Firma listesi başarıyla alındı
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Firma'
        500:
          description: Sunucu hatası
    post:
      summary: Yeni firma ekle
      tags: [Firma]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FirmaInput'
      responses:
        201:
          description: Firma başarıyla oluşturuldu
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Firma'
        400:
          description: Geçersiz veri
        500:
          description: Sunucu hatası
  
  /firma/{id}:
    get:
      summary: Firma detaylarını getir
      tags: [Firma]
      parameters:
        - name: id
          in: path
          required: true
          description: Firma ID'si
          schema:
            type: string
      responses:
        200:
          description: Firma başarıyla alındı
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Firma'
        404:
          description: Firma bulunamadı
        500:
          description: Sunucu hatası
    put:
      summary: Firma bilgilerini güncelle
      tags: [Firma]
      parameters:
        - name: id
          in: path
          required: true
          description: Firma ID'si
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FirmaInput'
      responses:
        200:
          description: Firma başarıyla güncellendi
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Firma'
        400:
          description: Geçersiz veri
        404:
          description: Firma bulunamadı
        500:
          description: Sunucu hatası
    delete:
      summary: Firma kaydını sil
      tags: [Firma]
      parameters:
        - name: id
          in: path
          required: true
          description: Firma ID'si
          schema:
            type: string
      responses:
        200:
          description: Firma başarıyla silindi
        404:
          description: Firma bulunamadı
        500:
          description: Sunucu hatası
  
  /firma/search/{term}:
    get:
      summary: Firma ara
      tags: [Firma]
      parameters:
        - name: term
          in: path
          required: true
          description: Arama terimi
          schema:
            type: string
        - name: limit
          in: query
          required: false
          description: Maksimum sonuç sayısı
          schema:
            type: integer
            default: 10
      responses:
        200:
          description: Arama sonuçları başarıyla alındı
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Firma'
        500:
          description: Sunucu hatası
  
  # Personel endpoints
  /personel:
    get:
      summary: Tüm personeli listele
      tags: [Personel]
      responses:
        200:
          description: Personel listesi başarıyla alındı
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Personel'
        500:
          description: Sunucu hatası
    post:
      summary: Yeni personel ekle
      tags: [Personel]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonelInput'
      responses:
        201:
          description: Personel başarıyla oluşturuldu
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Personel'
        400:
          description: Geçersiz veri
        500:
          description: Sunucu hatası

  /personel/{id}:
    get:
      summary: Personel detaylarını getir
      tags: [Personel]
      parameters:
        - name: id
          in: path
          required: true
          description: Personel ID'si
          schema:
            type: string
      responses:
        200:
          description: Personel başarıyla alındı
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Personel'
        404:
          description: Personel bulunamadı
        500:
          description: Sunucu hatası
    put:
      summary: Personel bilgilerini güncelle
      tags: [Personel]
      parameters:
        - name: id
          in: path
          required: true
          description: Personel ID'si
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonelInput'
      responses:
        200:
          description: Personel başarıyla güncellendi
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Personel'
        400:
          description: Geçersiz veri
        404:
          description: Personel bulunamadı
        500:
          description: Sunucu hatası
    delete:
      summary: Personel kaydını sil
      tags: [Personel]
      parameters:
        - name: id
          in: path
          required: true
          description: Personel ID'si
          schema:
            type: string
      responses:
        200:
          description: Personel başarıyla silindi
        404:
          description: Personel bulunamadı
        500:
          description: Sunucu hatası

  /personel/search/{term}:
    get:
      summary: Personel ara
      tags: [Personel]
      parameters:
        - name: term
          in: path
          required: true
          description: Arama terimi
          schema:
            type: string
        - name: limit
          in: query
          required: false
          description: Maksimum sonuç sayısı
          schema:
            type: integer
            default: 10
      responses:
        200:
          description: Arama sonuçları başarıyla alındı
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Personel'
        500:
          description: Sunucu hatası
          
  # Stok endpoints - Adding full CRUD operations
  /stok:
    get:
      summary: Tüm stokları listele
      tags: [Stok]
      responses:
        200:
          description: Stok listesi başarıyla alındı
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Stok'
        500:
          description: Sunucu hatası
    post:
      summary: Yeni ürün ekle
      tags: [Stok]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StokInput'
      responses:
        201:
          description: Ürün başarıyla oluşturuldu
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stok'
        400:
          description: Geçersiz veri
        500:
          description: Sunucu hatası
  
  /stok/{id}:
    get:
      summary: Ürün detaylarını getir
      tags: [Stok]
      parameters:
        - name: id
          in: path
          required: true
          description: Stok ID'si
          schema:
            type: string
      responses:
        200:
          description: Ürün başarıyla alındı
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stok'
        404:
          description: Ürün bulunamadı
        500:
          description: Sunucu hatası
    put:
      summary: Ürün bilgilerini güncelle
      tags: [Stok]
      parameters:
        - name: id
          in: path
          required: true
          description: Stok ID'si
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StokInput'
      responses:
        200:
          description: Ürün başarıyla güncellendi
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stok'
        400:
          description: Geçersiz veri
        404:
          description: Ürün bulunamadı
        500:
          description: Sunucu hatası
    delete:
      summary: Ürün kaydını sil
      tags: [Stok]
      parameters:
        - name: id
          in: path
          required: true
          description: Stok ID'si
          schema:
            type: string
      responses:
        200:
          description: Ürün başarıyla silindi
        404:
          description: Ürün bulunamadı
        500:
          description: Sunucu hatası

  /stok/search/{term}:
    get:
      summary: Ürün ara
      tags: [Stok]
      parameters:
        - name: term
          in: path
          required: true
          description: Arama terimi
          schema:
            type: string
        - name: limit
          in: query
          required: false
          description: Maksimum sonuç sayısı
          schema:
            type: integer
            default: 10
      responses:
        200:
          description: Arama sonuçları başarıyla alındı
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Stok'
        500:
          description: Sunucu hatası
          
  # Siparis endpoints - Adding full CRUD operations
  /siparis:
    get:
      summary: Tüm siparişleri listele
      tags: [Sipariş]
      responses:
        200:
          description: Sipariş listesi başarıyla alındı
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Siparis'
        500:
          description: Sunucu hatası
    post:
      summary: Yeni sipariş ekle
      tags: [Sipariş]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SiparisInput'
      responses:
        201:
          description: Sipariş başarıyla oluşturuldu
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Siparis'
        400:
          description: Geçersiz veri
        500:
          description: Sunucu hatası
          
  /siparis/{id}:
    get:
      summary: Sipariş detaylarını getir
      tags: [Sipariş]
      parameters:
        - name: id
          in: path
          required: true
          description: Sipariş ID'si
          schema:
            type: string
      responses:
        200:
          description: Sipariş başarıyla alındı
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Siparis'
        404:
          description: Sipariş bulunamadı
        500:
          description: Sunucu hatası
    put:
      summary: Sipariş bilgilerini güncelle
      tags: [Sipariş]
      parameters:
        - name: id
          in: path
          required: true
          description: Sipariş ID'si
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SiparisInput'
      responses:
        200:
          description: Sipariş başarıyla güncellendi
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Siparis'
        400:
          description: Geçersiz veri
        404:
          description: Sipariş bulunamadı
        500:
          description: Sunucu hatası
    delete:
      summary: Sipariş kaydını sil
      tags: [Sipariş]
      parameters:
        - name: id
          in: path
          required: true
          description: Sipariş ID'si
          schema:
            type: string
      responses:
        200:
          description: Sipariş başarıyla silindi
        404:
          description: Sipariş bulunamadı
        500:
          description: Sunucu hatası
          
  /siparis/search/{term}:
    get:
      summary: Sipariş ara
      tags: [Sipariş]
      parameters:
        - name: term
          in: path
          required: true
          description: Arama terimi
          schema:
            type: string
        - name: limit
          in: query
          required: false
          description: Maksimum sonuç sayısı
          schema:
            type: integer
            default: 10
      responses:
        200:
          description: Arama sonuçları başarıyla alındı
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Siparis'
        500:
          description: Sunucu hatası
  
  # Tedarikci endpoints - Adding full CRUD operations
  /tedarikci:
    get:
      summary: Tüm tedarikçileri listele
      tags: [Tedarikçi]
      responses:
        200:
          description: Tedarikçi listesi başarıyla alındı
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tedarikci'
        500:
          description: Sunucu hatası
    post:
      summary: Yeni tedarikçi ekle
      tags: [Tedarikçi]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TedarikciInput'
      responses:
        201:
          description: Tedarikçi başarıyla oluşturuldu
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tedarikci'
        400:
          description: Geçersiz veri
        500:
          description: Sunucu hatası
  
  /tedarikci/{id}:
    get:
      summary: Tedarikçi detaylarını getir
      tags: [Tedarikçi]
      parameters:
        - name: id
          in: path
          required: true
          description: Tedarikçi ID'si
          schema:
            type: string
      responses:
        200:
          description: Tedarikçi başarıyla alındı
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tedarikci'
        404:
          description: Tedarikçi bulunamadı
        500:
          description: Sunucu hatası
    put:
      summary: Tedarikçi bilgilerini güncelle
      tags: [Tedarikçi]
      parameters:
        - name: id
          in: path
          required: true
          description: Tedarikçi ID'si
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TedarikciInput'
      responses:
        200:
          description: Tedarikçi başarıyla güncellendi
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tedarikci'
        400:
          description: Geçersiz veri
        404:
          description: Tedarikçi bulunamadı
        500:
          description: Sunucu hatası
    delete:
      summary: Tedarikçi kaydını sil
      tags: [Tedarikçi]
      parameters:
        - name: id
          in: path
          required: true
          description: Tedarikçi ID'si
          schema:
            type: string
      responses:
        200:
          description: Tedarikçi başarıyla silindi
        404:
          description: Tedarikçi bulunamadı
        500:
          description: Sunucu hatası
  
  /tedarikci/search/{term}:
    get:
      summary: Tedarikçi ara
      tags: [Tedarikçi]
      parameters:
        - name: term
          in: path
          required: true
          description: Arama terimi
          schema:
            type: string
        - name: limit
          in: query
          required: false
          description: Maksimum sonuç sayısı
          schema:
            type: integer
            default: 10
      responses:
        200:
          description: Arama sonuçları başarıyla alındı
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tedarikci'
        500:
          description: Sunucu hatası

# Define schemas directly in this file
components:
  schemas:
    # Firma schemas
    FirmaInput:
      type: object
      required:
        - firmaAdi
        - vergiNo
      properties:
        firmaAdi:
          type: string
          description: Firma adı
        vergiNo:
          type: string
          description: Vergi numarası
        adres:
          type: string
          description: Firma adresi
        telefon:
          type: string
          description: Telefon numarası
        email:
          type: string
          format: email
          description: E-posta adresi
        yetkiliKisi:
          type: string
          description: Yetkili kişi
        aktif:
          type: boolean
          description: Firma aktif mi?
      example:
        firmaAdi: Örnek Firma Ltd. Şti.
        vergiNo: 1234567890
        adres: İstanbul, Türkiye
        telefon: +90 212 123 45 67
        email: info@ornekfirma.com
        yetkiliKisi: Ahmet Yılmaz
        aktif: true

    Firma:
      allOf:
        - $ref: '#/components/schemas/FirmaInput'
        - type: object
          properties:
            id:
              type: string
              description: Firma ID'si
            createdAt:
              type: string
              format: date-time
              description: Oluşturulma tarihi
            updatedAt:
              type: string
              format: date-time
              description: Son güncelleme tarihi
          example:
            id: abc123def456
            createdAt: 2023-05-15T10:30:00Z
            updatedAt: 2023-05-15T10:30:00Z
            
    # Personel schemas
    PersonelInput:
      type: object
      required:
        - ad
        - soyad
        - tcKimlik
      properties:
        ad:
          type: string
          description: Personelin adı
        soyad:
          type: string
          description: Personelin soyadı
        tcKimlik:
          type: string
          description: TC Kimlik numarası
        telefon:
          type: string
          description: Telefon numarası
        email:
          type: string
          format: email
          description: E-posta adresi
        departman:
          type: string
          description: Çalıştığı departman
        pozisyon:
          type: string
          description: Görevi/pozisyonu
        maas:
          type: number
          description: Maaş bilgisi
        iseBaslamaTarihi:
          type: string
          format: date
          description: İşe başlama tarihi
        aktif:
          type: boolean
          description: Personelin aktif olup olmadığı
        rolId:
          type: string
          description: Personelin rol ID'si

    Personel:
      allOf:
        - $ref: '#/components/schemas/PersonelInput'
        - type: object
          properties:
            id:
              type: string
              description: Personel ID
            izinler:
              type: array
              items:
                type: object
                properties:
                  baslangic:
                    type: string
                    format: date
                  bitis:
                    type: string
                    format: date
                  tur:
                    type: string
                    enum: [Yıllık, Hastalık, Ücretsiz, İdari]
              description: İzin kayıtları
            createdAt:
              type: string
              format: date-time
              description: Oluşturulma tarihi
            updatedAt:
              type: string
              format: date-time
              description: Son güncelleme tarihi
    
    # Stok schemas
    StokInput:
      type: object
      required:
        - urunKodu
        - urunAdi
        - birimFiyat
        - stokMiktari
      properties:
        urunKodu: 
          type: string 
          description: Ürün kodu
        urunAdi: 
          type: string 
          description: Ürün adı
        kategori: 
          type: string
          description: Ürün kategorisi
        birim: 
          type: string
          description: Ölçü birimi
        birimFiyat: 
          type: number 
          description: Birim fiyatı
        stokMiktari: 
          type: number 
          description: Stok miktarı
        kritikStokSeviyesi:
          type: number
          description: Kritik stok seviyesi
        resimUrl:
          type: string
          description: Ürün resim URL'i
        tedarikciId:
          type: string
          description: Tedarikçi ID'si
        rafYeri:
          type: string
          description: Raf/depo konumu
        aktif:
          type: boolean
          description: Aktiflik durumu
          
    Stok:
      allOf:
        - $ref: '#/components/schemas/StokInput'
        - type: object
          properties:
            id:
              type: string
              description: Stok ID'si
              
    # Siparis schemas
    SiparisInput:
      type: object
      required:
        - siparisNo
        - firmaId
        - siparisTarihi
        - urunler
        - toplamTutar
      properties:
        siparisNo:
          type: string
          description: Sipariş numarası
        firmaId: 
          type: string
          description: Müşteri firma ID'si
        siparisTarihi:
          type: string
          format: date
          description: Sipariş tarihi
        teslimatTarihi:
          type: string
          format: date
          description: Teslimat tarihi
        durum:
          type: string
          enum: ['Beklemede', 'Hazırlanıyor', 'Kargoda', 'Teslim Edildi', 'İptal']
          description: Sipariş durumu
        urunler:
          type: array
          description: Sipariş edilen ürünler
          items:
            type: object
            properties:
              urunId:
                type: string
              miktar:
                type: number
              birimFiyat:
                type: number
              toplam:
                type: number
        toplamTutar:
          type: number
          description: Toplam sipariş tutarı
        odemeDurumu:
          type: string
          enum: ['Ödenmedi', 'Kısmi Ödendi', 'Ödendi']
          description: Ödeme durumu
        odemeYontemi:
          type: string
          description: Ödeme yöntemi
        notlar:
          type: string
          description: Sipariş notları
    
    Siparis:
      allOf:
        - $ref: '#/components/schemas/SiparisInput'
        - type: object
          properties:
            id:
              type: string
              description: Sipariş ID'si
              
    # Tedarikci schemas
    TedarikciInput:
      type: object
      required:
        - firmaAdi
        - vergiNo
      properties:
        firmaAdi: 
          type: string 
          description: Tedarikçi firma adı
        vergiNo: 
          type: string 
          description: Vergi numarası
        adres: 
          type: string
          description: Firma adresi
        telefon: 
          type: string
          description: Telefon numarası 
        email: 
          type: string
          description: E-posta adresi
        yetkiliKisi: 
          type: string
          description: Yetkili kişi adı
        urunKategorileri:
          type: array
          items:
            type: string
          description: Sağladığı ürün kategorileri
        teslimatSuresi:
          type: number
          description: Ortalama teslimat süresi (gün)
        notlar:
          type: string
          description: Tedarikçi hakkında notlar
        aktif:
          type: boolean
          description: Aktiflik durumu
    
    Tedarikci:
      allOf:
        - $ref: '#/components/schemas/TedarikciInput'
        - type: object
          properties:
            id:
              type: string
              description: Tedarikçi ID'si
